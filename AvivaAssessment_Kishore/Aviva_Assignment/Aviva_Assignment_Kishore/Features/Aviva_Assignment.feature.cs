// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.0.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Aviva_Assignment_Kishore.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Verify the count of Links displayed for the search text and Print 5th Link Text", Description="         Search with the keyword AVIVA and \r\n\t\t verify that returned links count " +
        "and\r\n\t\t print 5th link text in returned links list", SourceFile="Features\\Aviva_Assignment.feature", SourceLine=0)]
    public partial class VerifyTheCountOfLinksDisplayedForTheSearchTextAndPrint5ThLinkTextFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Aviva_Assignment.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Verify the count of Links displayed for the search text and Print 5th Link Text", "         Search with the keyword AVIVA and \r\n\t\t verify that returned links count " +
                    "and\r\n\t\t print 5th link text in returned links list", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
 #line 7
    testRunner.Given("Launch browser with Google search engine", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        public virtual void SearchWithAvivaAndVerifyResultsLinks(string keyword, string linkcount, string link, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "googlesearchforAviva"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search with Aviva and verify results links", @__tags);
#line 10
 this.ScenarioSetup(scenarioInfo);
#line 6
 this.FeatureBackground();
#line 11
 testRunner.When(string.Format("user enter \'{0}\' in google search", keyword), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
 testRunner.And("click on search button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
 testRunner.Then(string.Format("user should display links returned in resultspage and verify \'{0}\'", linkcount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 14
 testRunner.And(string.Format("user should display \'{0}\' link", link), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Search with Aviva and verify results links, Aviva", new string[] {
                "googlesearchforAviva"}, SourceLine=17)]
        public virtual void SearchWithAvivaAndVerifyResultsLinks_Aviva()
        {
#line 10
 this.SearchWithAvivaAndVerifyResultsLinks("Aviva", "12", "5", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyTitleInAvivaHomePage(string keyword, string access, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "PositiveScenario"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Title in Aviva Home Page", @__tags);
#line 22
    this.ScenarioSetup(scenarioInfo);
#line 6
 this.FeatureBackground();
#line 23
  testRunner.When(string.Format("user enter \'{0}\' in google search", keyword), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
 testRunner.And("click on search button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
    testRunner.Then("click on Aviva Login Link in the Google Search Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 26
 testRunner.And(string.Format("verify Title of the \'{0}\' of the Aviva Home Page", access), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Verify Title in Aviva Home Page, Aviva", new string[] {
                "PositiveScenario"}, SourceLine=29)]
        public virtual void VerifyTitleInAvivaHomePage_Aviva()
        {
#line 22
    this.VerifyTitleInAvivaHomePage("Aviva", "AVIVA Insta Access ™ - Access without Login", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyErrorMessageInAvivaLoginPage(string keyword, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "NegativeScenario"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Error Message in Aviva Login Page", @__tags);
#line 34
    this.ScenarioSetup(scenarioInfo);
#line 6
 this.FeatureBackground();
#line 35
    testRunner.When(string.Format("user enter \'{0}\' in google search", keyword), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 36
    testRunner.And("click on search button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
    testRunner.Then("click on Aviva Login Link in the Google Search Page and click on Login", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 38
 testRunner.And("verify the Error Message in the Aviva Login Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Verify Error Message in Aviva Login Page, Aviva", new string[] {
                "NegativeScenario"}, SourceLine=41)]
        public virtual void VerifyErrorMessageInAvivaLoginPage_Aviva()
        {
#line 34
    this.VerifyErrorMessageInAvivaLoginPage("Aviva", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
